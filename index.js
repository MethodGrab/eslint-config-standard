//
// Base config
//
// @link http://eslint.org/docs/rules
// @link http://eslint.org/docs/user-guide/configuring
//

'use strict';

module.exports = {

	env : {
		node     : true,
		commonjs : true,
		es6      : false,
	},

	parserOptions : {
		ecmaVersion : 5,
	},

	rules : {

		// Possible errors
		'no-cond-assign'                    : 'error',
		// 'no-console'                        : 'off',
		'no-constant-condition'             : 'error',
		'no-control-regex'                  : 'error',
		'no-debugger'                       : 'error',
		'no-dupe-keys'                      : 'error',
		'no-dupe-args'                      : 'error',
		'no-duplicate-case'                 : 'error',
		'no-empty-character-class'          : 'error',
		'no-empty'                          : 'warn',
		'no-ex-assign'                      : 'error',
		'no-extra-boolean-cast'             : 'error',

		// Disabled due to conflict with `no-confusing-arrow`: https://github.com/eslint/eslint/issues/6196
		// 'no-extra-parens'                   : [ 'error', 'all', { conditionalAssign : false, returnAssign : false, nestedBinaryExpressions : false } ],

		'no-extra-semi'                     : 'error',
		'no-func-assign'                    : 'error',
		'no-inner-declarations'             : [ 'error', 'functions' ],
		'no-invalid-regexp'                 : 'error',
		'no-irregular-whitespace'           : 'error',
		'no-obj-calls'                      : 'error',
		'no-prototype-builtins'             : 'error',
		'no-regex-spaces'                   : 'error',
		// 'no-restricted-globals'             : 'off',
		'no-sparse-arrays'                  : 'error',
		// 'no-template-curly-in-string'       : 'error',
		'no-unreachable'                    : 'error',
		'no-unsafe-finally'                 : 'error',
		'no-unsafe-negation'                : 'error',
		'use-isnan'                         : 'error',
		// 'valid-jsdoc'                       : 'off',
		'valid-typeof'                      : 'error',
		'no-unexpected-multiline'           : 'error',


		// Best practices
		'accessor-pairs'                    : 'warn',
		'array-callback-return'             : 'error',
		// 'block-scoped-var'                  : 'off',
		'class-methods-use-this'            : 'error',
		// 'complexity'                        : [ 'off', 11 ],
		'consistent-return'                 : 'error',
		'curly'                             : [ 'error', 'all' ],
		// 'default-case'                      : 'off',
		'dot-notation'                      : [ 'error', { 'allowKeywords' : true } ],
		// 'dot-location'                      : 'off',
		'eqeqeq'                            : 'error',
		// 'guard-for-in'                      : 'off',
		'no-alert'                          : 'warn',
		'no-caller'                         : 'error',
		'no-case-declarations'              : 'error',
		// 'no-div-regex'                      : 'off',
		'no-else-return'                    : 'warn',
		'no-empty-function'                 : 'warn',
		'no-empty-pattern'                  : 'error',
		'no-eq-null'                        : 'warn',
		'no-eval'                           : 'error',
		'no-extend-native'                  : 'error',
		'no-extra-bind'                     : 'error',
		'no-extra-label'                    : 'warn',
		'no-fallthrough'                    : 'warn',
		'no-floating-decimal'               : 'warn',
		'no-global-assign'                  : 'error',
		// 'no-implicit-coercion'              : 'off',
		'no-implicit-globals'               : 'warn',
		'no-implied-eval'                   : 'error',
		'no-invalid-this'                   : 'warn',
		'no-iterator'                       : 'error',
		'no-labels'                         : 'error',
		'no-lone-blocks'                    : 'error',
		'no-loop-func'                      : 'error',
		// 'no-magic-numbers'                  : 'off',
		// 'no-multi-spaces'                   : 'off',
		'no-multi-str'                      : 'error',
		'no-new-func'                       : 'error',
		'no-new-wrappers'                   : 'warn',
		'no-new'                            : 'warn',
		'no-octal-escape'                   : 'error',
		'no-octal'                          : 'error',
		'no-param-reassign'                 : [ 'error', { props : true } ],
		// 'no-process-env'                    : 'off',
		'no-proto'                          : 'error',
		'no-redeclare'                      : 'error',
		// 'no-restricted-properties'          : [ 'error', {} ],
		'no-return-assign'                  : 'warn',
		'no-script-url'                     : 'error',
		'no-self-assign'                    : [ 'error', { props : true } ],
		'no-self-compare'                   : 'warn',
		'no-sequences'                      : 'error',
		'no-throw-literal'                  : 'warn',
		// 'no-unmodified-loop-condition'      : 'off',
		'no-unused-expressions'             : 'warn',
		'no-unused-labels'                  : 'warn',
		'no-useless-call'                   : 'warn',
		'no-useless-concat'                 : 'warn',
		'no-useless-escape'                 : 'error',
		// 'no-void'                           : 'off',
		// 'no-warning-comments'               : [ 'off', { terms : [ 'todo', 'fixme', 'xxx' ], location : 'start' } ],
		'no-with'                           : 'error',
		// 'radix'                             : 'off',
		// 'vars-on-top'                       : 'off',
		'wrap-iife'                         : [ 'warn', 'outside' ],
		'yoda'                              : [ 'error', 'never' ],


		// Strict mode
		'strict'                            : [ 'error', 'safe' ],


		// Variables
		// 'init-declarations'                 : 'off',
		// 'no-catch-shadow'                   : 'off',
		'no-delete-var'                     : 'error',
		'no-label-var'                      : 'error',
		'no-shadow-restricted-names'        : 'error',
		'no-shadow'                         : 'error',
		'no-undef-init'                     : 'error',
		'no-undef'                          : 'error',
		'no-undefined'                      : 'warn',
		// 'no-unused-vars'                    : [ 'off', { 'vars' : 'all', 'args' : 'none' } ],
		'no-use-before-define'              : [ 'warn', 'nofunc' ],


		// Node.js & CommonJS
		'callback-return'                   : [ 'error', [ 'callback', 'cb', 'next', 'done' ] ],
		'global-require'                    : 'warn',
		// 'handle-callback-err'               : 'off',
		// 'no-mixed-requires'                 : [ 'off', true ],
		'no-new-require'                    : 'warn',
		'no-path-concat'                    : 'warn',
		'no-process-exit'                   : 'error',
		// 'no-restricted-imports'             : 'off',
		// 'no-restricted-modules'             : 'off',
		// 'no-sync'                           : 'off',


		// Stylistic issues
		// 'array-bracket-spacing'             : [ 'off', 'always' ],
		'block-spacing'                     : [ 'warn', 'always' ],
		// 'brace-style'                       : [ 'off', '1tbs', { 'allowSingleLine' : true } ],
		'camelcase'                         : 'warn',
		'comma-dangle'                      : [ 'warn', 'always-multiline' ],
		// 'comma-spacing'                     : 'off',
		'comma-style'                       : [ 'warn', 'last' ],
		// 'computed-property-spacing'         : 'off',
		// 'consistent-this'                   : [ 'off', 'self' ],
		// 'eol-last'                          : 'off',
		'func-call-spacing'                 : [ 'error', 'never' ],
		// 'func-names'                        : 'off',
		// 'func-style'                        : [ 'off', 'declaration' ],
		// 'id-blacklist'                      : 'off',
		// 'id-length'                         : 'off',
		// 'id-match'                          : 'off',
		'indent'                            : [ 'warn', 'tab', { 'SwitchCase' : 1, 'VariableDeclarator' : 1 } ],
		// 'key-spacing'                       : [ 'off', {
		// 	beforeColon     : false,
		// 	afterColon      : true,
		// 	mode            : 'minimum',
		// 	align: {
		// 		beforeColon : true,
		// 		afterColon  : true,
		// 	},
		// 	singleLine: {
		// 		beforeColon : false,
		// 		afterColon  : true,
		//
		// 	},
		// 	multiline: {
		// 		beforeColon : false,
		// 		afterColon  : true,
		// 		align       : 'colon',
		// 	},
		// }],
		// 'keyword-spacing'                   : 'off',
		// 'line-comment-position'             : 1,
		'linebreak-style'                   : [ 'warn', 'unix' ],
		// 'lines-around-comment'              : 'off',
		'lines-around-directive'            : [ 'warn', 'always' ],
		// 'max-depth'                         : [ 'off', 4 ],
		// 'max-len'                           : [ 'off', 80, 4 ],
		// 'max-lines'                         : 'off',
		// 'max-nested-callbacks'              : [ 'off', 2 ],
		// 'max-params'                        : [ 'off', 3 ],
		// 'max-statements'                    : [ 'off', 10 ],
		// 'max-statements-per-line'           : [ 'off', { max: 1 } ],
		// 'new-cap'                           : 'off',
		// 'new-parens'                        : 'off',
		// 'newline-after-var'                 : 'off',
		// 'newline-before-return'             : 'off',
		// 'newline-per-chained-call'          : 'off',
		'no-array-constructor'              : 'warn',
		// 'no-continue'                       : 'off',
		// 'no-inline-comments'                : 'off',
		// 'no-lonely-if'                      : 'off',
		'no-mixed-operators'                : 'warn',
		'no-mixed-spaces-and-tabs'          : [ 2, 'smart-tabs' ],
		// 'no-multiple-empty-lines'           : [ 'off', { 'max' : 2 } ],
		'no-negated-condition'              : 'warn',
		// 'no-nested-ternary'                 : 'off',
		'no-new-object'                     : 'error',
		// 'no-restricted-syntax'              : 'off',
		// 'no-tabs'                           : 'off',
		// 'no-ternary'                        : 'off',
		'no-trailing-spaces'                : 'warn',
		// 'no-underscore-dangle'              : 'off',
		'no-unneeded-ternary'               : 'warn',
		'no-whitespace-before-property'     : 'warn',
		// 'object-curly-newline'              : 'off',
		// 'object-curly-spacing'              : 'off',
		// 'object-property-newline'           : 'off',
		// 'one-var'                           : [ 'off', 'never' ],
		// 'one-var-declaration-per-line'      : 'off',
		// 'operator-assignment'               : [ 'off', 'always' ],
		// 'operator-linebreak'                : [ 'off', 'after' ],
		// 'padded-blocks'                     : [ 'off', 'always' ],
		'quote-props'                       : [ 'error', 'as-needed', { keywords : false } ],
		'quotes'                            : [ 'error', 'single', { avoidEscape : true, allowTemplateLiterals : true } ],
		// 'require-jsdoc'                     : 'off',
		'semi'                              : [ 'error', 'always' ],
		// 'semi-spacing'                      : [ 'off', { 'before' : false, 'after' : true } ],
		// 'sort-keys'                         : 'off',
		// 'sort-vars'                         : 'off',
		// 'space-before-blocks'               : [ 'off', 'always' ],
		// 'space-before-function-paren'       : [ 'off', { 'anonymous' : 'never', 'named' : 'always' } ],
		// 'space-in-brackets'                 : [ 'off', 'always' ],
		// 'space-in-parens'                   : [ 'off', 'always', { 'exceptions' : [ 'empty' ] } ],
		// 'space-infix-ops'                   : 'off',
		// 'space-unary-ops'                   : [ 'off', { 'words' : true, 'nonwords' : false } ],
		// 'spaced-comment'                    : [ 'off', 'always' ],
		'unicode-bom'                       : [ 'error', 'never' ],
		// 'wrap-regex'                        : 'off',


		// Legacy
		// 'no-bitwise'                        : 'off',
		// 'no-plusplus'                       : 'off',

	},

};
